// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/addcourse/{matric_number}/{ID}": {
            "post": {
                "description": "Assign a single specified course to a student. Student and course are specified as path params.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Add Course to Student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Matric Number",
                        "name": "matric_number",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericSuccessResponse"
                        }
                    }
                }
            }
        },
        "/admin/listcoursetudents/{ID}": {
            "get": {
                "description": "Returns all the students assigned to a course. The course is specified by ID in the path.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Course Assignees",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminStudentList"
                        }
                    }
                }
            }
        },
        "/admin/liststudentcourses/{matric_number}": {
            "get": {
                "description": "Returns all the courses assigned to a Student. The student is specified by matric number in the path.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Student Courses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Matric Number",
                        "name": "matric_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminCourseList"
                        }
                    }
                }
            }
        },
        "/admin/removecourse/{matric_number}/{ID}": {
            "delete": {
                "description": "Removes a single specified course from a student. Student and course are specified as path params.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Remove Course From Student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Matric Number",
                        "name": "matric_number",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericSuccessResponse"
                        }
                    }
                }
            }
        },
        "/admin/updatestudentcourses/{matric_number}": {
            "post": {
                "description": "Assign multiple courses specified by Course ID to a student. Course IDs are passed as a comma delimited array in the request body. The difference between this route and the AddCourse route is that multiple courses can be added at once.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Course List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Matric Number",
                        "name": "matric_number",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Course List",
                        "name": "Course_List",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericSuccessResponse"
                        }
                    }
                }
            }
        },
        "/course": {
            "get": {
                "description": "Returns all the existing courses.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get Courses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CourseSuccessResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a course in the DB. Course Details are passed in the request body.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Create Course",
                "parameters": [
                    {
                        "description": "Course to Create",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwagCourse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CourseSuccessResponse"
                        }
                    }
                }
            }
        },
        "/course/{ID}": {
            "get": {
                "description": "Returns a course. Course to return is specified by ID in path Param.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get Course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CourseSuccessResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a course. Course to delete is specified by ID in path param.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Delete Course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course id",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericSuccessResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a course. Course is specified by ID. Update details are passed in the request body.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Update Course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Details",
                        "name": "Updatecourse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwagUpdateCourse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CourseSuccessResponse"
                        }
                    }
                }
            }
        },
        "/student": {
            "get": {
                "description": "Returns all the existing students.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get Students",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StudentSuccessResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a Student in the DB. Student Details are passed in the request body.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Create Student",
                "parameters": [
                    {
                        "description": "Student to Create",
                        "name": "Student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwagStudent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.StudentSuccessResponse"
                        }
                    }
                }
            }
        },
        "/student/{matric_number}": {
            "get": {
                "description": "Returns a Student. Student to return is specified by Matric Number in path Param.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get Student by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Matric Number",
                        "name": "matric_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StudentSuccessResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a Student. Student to delete is specified by matric number in path param.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Delete Student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Matric Number",
                        "name": "matric_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericSuccessResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a Student. Student is specified by Matric Number. Update details are passed in the request body. All Fields are not required.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Update Student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Matric Number",
                        "name": "matric_number",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Details",
                        "name": "UpdateStudent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SwagUpdateStudent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StudentSuccessResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AdminCourseList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "models.AdminStudentList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Student"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "models.Course": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "course_code": {
                    "type": "string"
                },
                "course_name": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "lecturer": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.CourseSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Course"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "models.GenericSuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "models.Student": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "matric_number": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.StudentSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Student"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "models.SwagCourse": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "course_code": {
                    "type": "string"
                },
                "course_name": {
                    "type": "string"
                },
                "lecturer": {
                    "type": "string"
                }
            }
        },
        "models.SwagStudent": {
            "type": "object",
            "properties": {
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "matric_number": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.SwagUpdateCourse": {
            "type": "object",
            "properties": {
                "course_code": {
                    "type": "string"
                },
                "course_name": {
                    "type": "string"
                },
                "lecturer": {
                    "type": "string"
                }
            }
        },
        "models.SwagUpdateStudent": {
            "type": "object",
            "properties": {
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8001",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "School Management Server",
	Description:      "A School Management Server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
